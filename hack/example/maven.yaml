# a placeholder for development; in a fully integrated system, this will come from the appstudio tekton bundle
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: maven
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Build Tools
    tekton.dev/tags: build-tool
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le"
spec:
  description: >-
    This Task can be used to run a Maven build.
  workspaces:
    - name: source
      description: The workspace consisting of maven project.
    - name: artifacts
  params:
    - name: MAVEN_IMAGE
      type: string
      description: Maven base image
      default: registry.access.redhat.com/ubi8/openjdk-17:1.13-1.1653918216
    - name: GOALS
      description: maven goals to run
      type: array
      default:
        - "package"
    - name: CONTEXT_DIR
      type: string
      description: >-
        The context directory within the repository for sources on
        which we want to execute maven goals.
      default: "."
    - name: DEPENDENCY_ANALYSER_PATH
      type: string
      description: >-
        The path to use for dependency analysis.
      default: "target"
    - name: GIT_URL
      type: string
      description: >-
        The git URL
    - name: GIT_TAG
      type: string
      description: >-
        The git tag
  results:
    - name: dependencies
      description: The total number of dependencies in the output
    - name: untrusted-dependencies
      description: The total number of dependencies that came from an untrusted source, such as Maven central
    - name: JAVA_COMMUNITY_DEPENDENCIES
      description: The list of community dependencies
    - name: JAVA_DEPENDENCIES
      description: The list of dependencies > source
  steps:
    - name: mvn-goals
      image: $(params.MAVEN_IMAGE)
      securityContext:
        runAsUser: 0
      workingDir: $(workspaces.source.path)/$(params.CONTEXT_DIR)
      script: |
        #!/usr/bin/env bash

        mvn -Dmaven.repo.local=$(workspaces.artifacts.path) -B -e -DskipTests clean package -Denforcer.skip

    - name: analyse-dependencies
      securityContext:
        runAsUser: 0
      image: local/apheleia-processor:dev
      imagePullPolicy: Never
      command: ["/opt/jboss/container/java/run/run-java.sh"] #Do not delete this line, it will break local image support
      args:
        - analyse
        - --maven-repo
        - $(workspaces.artifacts.path)
        - --create-artifacts
        - --git-url
        - "$(params.GIT_URL)"
        - --tag
        - "$(params.GIT_TAG)"
        - $(workspaces.source.path)/$(params.CONTEXT_DIR)
